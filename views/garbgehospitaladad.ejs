router.post('/book-appointment', [
  body('doctor').notEmpty().withMessage('Doctor is required'),
  body('date').isDate().withMessage('Valid date is required'),
  body('time').notEmpty().withMessage('Time is required'),
], async (req, res, next) => {
  const errors = validationResult(req);
  const doctors = await Doctor.find(); 
  if (!errors.isEmpty()) {
    return res.render('book_appointment', { doctors, user: req.user, errors: errors.array() });
  }

  try {
    const { doctor, date, time, description } = req.body;
    console.log('Doctor ID Submitted:', doctor); // Log the doctor ID submitted in the form
    const doctorData = await Doctor.findById(doctor); // Ensure correct ID is being used here
    if (!doctorData) {
      return res.status(400).send("Doctor not found");
    }
    const doctorName = doctorData.name; // Correct doctor name being fetched
    const newAppointment = new Appointment({
      user: req.user._id,
      doctor: doctor, // Ensure correct doctor ID is being used here
      doctorName: doctorName, 
      date,
      time,
      description
    });

    console.log('New Appointment:', newAppointment); // Log the new appointment object before saving

    await newAppointment.save();
    
    req.flash('success', 'Appointment booked successfully');

    res.redirect('/');
  } catch (error) {
    next(error);
  }
});
